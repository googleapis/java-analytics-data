// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/data.proto

package com.google.analytics.data.v1alpha;

/**
 * <pre>
 * Breakdowns add a dimension to the funnel table sub report response.
 * </pre>
 *
 * Protobuf type {@code google.analytics.data.v1alpha.FunnelBreakdown}
 */
public final class FunnelBreakdown extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.analytics.data.v1alpha.FunnelBreakdown)
    FunnelBreakdownOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FunnelBreakdown.newBuilder() to construct.
  private FunnelBreakdown(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FunnelBreakdown() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FunnelBreakdown();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FunnelBreakdown(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.analytics.data.v1alpha.Dimension.Builder subBuilder = null;
            if (breakdownDimension_ != null) {
              subBuilder = breakdownDimension_.toBuilder();
            }
            breakdownDimension_ = input.readMessage(com.google.analytics.data.v1alpha.Dimension.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(breakdownDimension_);
              breakdownDimension_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            bitField0_ |= 0x00000001;
            limit_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelBreakdown_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelBreakdown_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.data.v1alpha.FunnelBreakdown.class, com.google.analytics.data.v1alpha.FunnelBreakdown.Builder.class);
  }

  private int bitField0_;
  public static final int BREAKDOWN_DIMENSION_FIELD_NUMBER = 1;
  private com.google.analytics.data.v1alpha.Dimension breakdownDimension_;
  /**
   * <pre>
   * The dimension column added to the funnel table sub report response. The
   * breakdown dimension breaks down each funnel step. A valid
   * `breakdownDimension` is required if `funnelBreakdown` is specified.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
   * @return Whether the breakdownDimension field is set.
   */
  @java.lang.Override
  public boolean hasBreakdownDimension() {
    return breakdownDimension_ != null;
  }
  /**
   * <pre>
   * The dimension column added to the funnel table sub report response. The
   * breakdown dimension breaks down each funnel step. A valid
   * `breakdownDimension` is required if `funnelBreakdown` is specified.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
   * @return The breakdownDimension.
   */
  @java.lang.Override
  public com.google.analytics.data.v1alpha.Dimension getBreakdownDimension() {
    return breakdownDimension_ == null ? com.google.analytics.data.v1alpha.Dimension.getDefaultInstance() : breakdownDimension_;
  }
  /**
   * <pre>
   * The dimension column added to the funnel table sub report response. The
   * breakdown dimension breaks down each funnel step. A valid
   * `breakdownDimension` is required if `funnelBreakdown` is specified.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
   */
  @java.lang.Override
  public com.google.analytics.data.v1alpha.DimensionOrBuilder getBreakdownDimensionOrBuilder() {
    return getBreakdownDimension();
  }

  public static final int LIMIT_FIELD_NUMBER = 2;
  private long limit_;
  /**
   * <pre>
   * The maximum number of distinct values of the breakdown dimension to return
   * in the response. A `limit` of `5` is used if limit is not specified. Limit
   * must exceed zero and cannot exceed 15.
   * </pre>
   *
   * <code>optional int64 limit = 2;</code>
   * @return Whether the limit field is set.
   */
  @java.lang.Override
  public boolean hasLimit() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The maximum number of distinct values of the breakdown dimension to return
   * in the response. A `limit` of `5` is used if limit is not specified. Limit
   * must exceed zero and cannot exceed 15.
   * </pre>
   *
   * <code>optional int64 limit = 2;</code>
   * @return The limit.
   */
  @java.lang.Override
  public long getLimit() {
    return limit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (breakdownDimension_ != null) {
      output.writeMessage(1, getBreakdownDimension());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(2, limit_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (breakdownDimension_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBreakdownDimension());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, limit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.analytics.data.v1alpha.FunnelBreakdown)) {
      return super.equals(obj);
    }
    com.google.analytics.data.v1alpha.FunnelBreakdown other = (com.google.analytics.data.v1alpha.FunnelBreakdown) obj;

    if (hasBreakdownDimension() != other.hasBreakdownDimension()) return false;
    if (hasBreakdownDimension()) {
      if (!getBreakdownDimension()
          .equals(other.getBreakdownDimension())) return false;
    }
    if (hasLimit() != other.hasLimit()) return false;
    if (hasLimit()) {
      if (getLimit()
          != other.getLimit()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBreakdownDimension()) {
      hash = (37 * hash) + BREAKDOWN_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + getBreakdownDimension().hashCode();
    }
    if (hasLimit()) {
      hash = (37 * hash) + LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLimit());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelBreakdown parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.analytics.data.v1alpha.FunnelBreakdown prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Breakdowns add a dimension to the funnel table sub report response.
   * </pre>
   *
   * Protobuf type {@code google.analytics.data.v1alpha.FunnelBreakdown}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.analytics.data.v1alpha.FunnelBreakdown)
      com.google.analytics.data.v1alpha.FunnelBreakdownOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelBreakdown_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelBreakdown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.data.v1alpha.FunnelBreakdown.class, com.google.analytics.data.v1alpha.FunnelBreakdown.Builder.class);
    }

    // Construct using com.google.analytics.data.v1alpha.FunnelBreakdown.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (breakdownDimensionBuilder_ == null) {
        breakdownDimension_ = null;
      } else {
        breakdownDimension_ = null;
        breakdownDimensionBuilder_ = null;
      }
      limit_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelBreakdown_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelBreakdown getDefaultInstanceForType() {
      return com.google.analytics.data.v1alpha.FunnelBreakdown.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelBreakdown build() {
      com.google.analytics.data.v1alpha.FunnelBreakdown result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelBreakdown buildPartial() {
      com.google.analytics.data.v1alpha.FunnelBreakdown result = new com.google.analytics.data.v1alpha.FunnelBreakdown(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (breakdownDimensionBuilder_ == null) {
        result.breakdownDimension_ = breakdownDimension_;
      } else {
        result.breakdownDimension_ = breakdownDimensionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.limit_ = limit_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.data.v1alpha.FunnelBreakdown) {
        return mergeFrom((com.google.analytics.data.v1alpha.FunnelBreakdown)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.data.v1alpha.FunnelBreakdown other) {
      if (other == com.google.analytics.data.v1alpha.FunnelBreakdown.getDefaultInstance()) return this;
      if (other.hasBreakdownDimension()) {
        mergeBreakdownDimension(other.getBreakdownDimension());
      }
      if (other.hasLimit()) {
        setLimit(other.getLimit());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.analytics.data.v1alpha.FunnelBreakdown parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.analytics.data.v1alpha.FunnelBreakdown) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.analytics.data.v1alpha.Dimension breakdownDimension_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.analytics.data.v1alpha.Dimension, com.google.analytics.data.v1alpha.Dimension.Builder, com.google.analytics.data.v1alpha.DimensionOrBuilder> breakdownDimensionBuilder_;
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     * @return Whether the breakdownDimension field is set.
     */
    public boolean hasBreakdownDimension() {
      return breakdownDimensionBuilder_ != null || breakdownDimension_ != null;
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     * @return The breakdownDimension.
     */
    public com.google.analytics.data.v1alpha.Dimension getBreakdownDimension() {
      if (breakdownDimensionBuilder_ == null) {
        return breakdownDimension_ == null ? com.google.analytics.data.v1alpha.Dimension.getDefaultInstance() : breakdownDimension_;
      } else {
        return breakdownDimensionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public Builder setBreakdownDimension(com.google.analytics.data.v1alpha.Dimension value) {
      if (breakdownDimensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        breakdownDimension_ = value;
        onChanged();
      } else {
        breakdownDimensionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public Builder setBreakdownDimension(
        com.google.analytics.data.v1alpha.Dimension.Builder builderForValue) {
      if (breakdownDimensionBuilder_ == null) {
        breakdownDimension_ = builderForValue.build();
        onChanged();
      } else {
        breakdownDimensionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public Builder mergeBreakdownDimension(com.google.analytics.data.v1alpha.Dimension value) {
      if (breakdownDimensionBuilder_ == null) {
        if (breakdownDimension_ != null) {
          breakdownDimension_ =
            com.google.analytics.data.v1alpha.Dimension.newBuilder(breakdownDimension_).mergeFrom(value).buildPartial();
        } else {
          breakdownDimension_ = value;
        }
        onChanged();
      } else {
        breakdownDimensionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public Builder clearBreakdownDimension() {
      if (breakdownDimensionBuilder_ == null) {
        breakdownDimension_ = null;
        onChanged();
      } else {
        breakdownDimension_ = null;
        breakdownDimensionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public com.google.analytics.data.v1alpha.Dimension.Builder getBreakdownDimensionBuilder() {
      
      onChanged();
      return getBreakdownDimensionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    public com.google.analytics.data.v1alpha.DimensionOrBuilder getBreakdownDimensionOrBuilder() {
      if (breakdownDimensionBuilder_ != null) {
        return breakdownDimensionBuilder_.getMessageOrBuilder();
      } else {
        return breakdownDimension_ == null ?
            com.google.analytics.data.v1alpha.Dimension.getDefaultInstance() : breakdownDimension_;
      }
    }
    /**
     * <pre>
     * The dimension column added to the funnel table sub report response. The
     * breakdown dimension breaks down each funnel step. A valid
     * `breakdownDimension` is required if `funnelBreakdown` is specified.
     * </pre>
     *
     * <code>.google.analytics.data.v1alpha.Dimension breakdown_dimension = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.analytics.data.v1alpha.Dimension, com.google.analytics.data.v1alpha.Dimension.Builder, com.google.analytics.data.v1alpha.DimensionOrBuilder> 
        getBreakdownDimensionFieldBuilder() {
      if (breakdownDimensionBuilder_ == null) {
        breakdownDimensionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.data.v1alpha.Dimension, com.google.analytics.data.v1alpha.Dimension.Builder, com.google.analytics.data.v1alpha.DimensionOrBuilder>(
                getBreakdownDimension(),
                getParentForChildren(),
                isClean());
        breakdownDimension_ = null;
      }
      return breakdownDimensionBuilder_;
    }

    private long limit_ ;
    /**
     * <pre>
     * The maximum number of distinct values of the breakdown dimension to return
     * in the response. A `limit` of `5` is used if limit is not specified. Limit
     * must exceed zero and cannot exceed 15.
     * </pre>
     *
     * <code>optional int64 limit = 2;</code>
     * @return Whether the limit field is set.
     */
    @java.lang.Override
    public boolean hasLimit() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum number of distinct values of the breakdown dimension to return
     * in the response. A `limit` of `5` is used if limit is not specified. Limit
     * must exceed zero and cannot exceed 15.
     * </pre>
     *
     * <code>optional int64 limit = 2;</code>
     * @return The limit.
     */
    @java.lang.Override
    public long getLimit() {
      return limit_;
    }
    /**
     * <pre>
     * The maximum number of distinct values of the breakdown dimension to return
     * in the response. A `limit` of `5` is used if limit is not specified. Limit
     * must exceed zero and cannot exceed 15.
     * </pre>
     *
     * <code>optional int64 limit = 2;</code>
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(long value) {
      bitField0_ |= 0x00000001;
      limit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum number of distinct values of the breakdown dimension to return
     * in the response. A `limit` of `5` is used if limit is not specified. Limit
     * must exceed zero and cannot exceed 15.
     * </pre>
     *
     * <code>optional int64 limit = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLimit() {
      bitField0_ = (bitField0_ & ~0x00000001);
      limit_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.analytics.data.v1alpha.FunnelBreakdown)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.FunnelBreakdown)
  private static final com.google.analytics.data.v1alpha.FunnelBreakdown DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.analytics.data.v1alpha.FunnelBreakdown();
  }

  public static com.google.analytics.data.v1alpha.FunnelBreakdown getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FunnelBreakdown>
      PARSER = new com.google.protobuf.AbstractParser<FunnelBreakdown>() {
    @java.lang.Override
    public FunnelBreakdown parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FunnelBreakdown(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FunnelBreakdown> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FunnelBreakdown> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.data.v1alpha.FunnelBreakdown getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

