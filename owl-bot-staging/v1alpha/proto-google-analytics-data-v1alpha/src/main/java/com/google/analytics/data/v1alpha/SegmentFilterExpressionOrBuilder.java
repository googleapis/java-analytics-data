// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/data.proto

package com.google.analytics.data.v1alpha;

public interface SegmentFilterExpressionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.analytics.data.v1alpha.SegmentFilterExpression)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The SegmentFilterExpression in `andGroup` have an AND relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList and_group = 1;</code>
   * @return Whether the andGroup field is set.
   */
  boolean hasAndGroup();
  /**
   * <pre>
   * The SegmentFilterExpression in `andGroup` have an AND relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList and_group = 1;</code>
   * @return The andGroup.
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionList getAndGroup();
  /**
   * <pre>
   * The SegmentFilterExpression in `andGroup` have an AND relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList and_group = 1;</code>
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionListOrBuilder getAndGroupOrBuilder();

  /**
   * <pre>
   * The SegmentFilterExpression in `orGroup` have an OR relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList or_group = 2;</code>
   * @return Whether the orGroup field is set.
   */
  boolean hasOrGroup();
  /**
   * <pre>
   * The SegmentFilterExpression in `orGroup` have an OR relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList or_group = 2;</code>
   * @return The orGroup.
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionList getOrGroup();
  /**
   * <pre>
   * The SegmentFilterExpression in `orGroup` have an OR relationship.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpressionList or_group = 2;</code>
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionListOrBuilder getOrGroupOrBuilder();

  /**
   * <pre>
   * The SegmentFilterExpression is NOT of `notExpression`.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression not_expression = 3;</code>
   * @return Whether the notExpression field is set.
   */
  boolean hasNotExpression();
  /**
   * <pre>
   * The SegmentFilterExpression is NOT of `notExpression`.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression not_expression = 3;</code>
   * @return The notExpression.
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpression getNotExpression();
  /**
   * <pre>
   * The SegmentFilterExpression is NOT of `notExpression`.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression not_expression = 3;</code>
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionOrBuilder getNotExpressionOrBuilder();

  /**
   * <pre>
   * A primitive segment filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilter segment_filter = 4;</code>
   * @return Whether the segmentFilter field is set.
   */
  boolean hasSegmentFilter();
  /**
   * <pre>
   * A primitive segment filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilter segment_filter = 4;</code>
   * @return The segmentFilter.
   */
  com.google.analytics.data.v1alpha.SegmentFilter getSegmentFilter();
  /**
   * <pre>
   * A primitive segment filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilter segment_filter = 4;</code>
   */
  com.google.analytics.data.v1alpha.SegmentFilterOrBuilder getSegmentFilterOrBuilder();

  /**
   * <pre>
   * Creates a filter that matches events of a single event name. If a
   * parameter filter expression is specified, only the subset of events that
   * match both the single event name and the parameter filter expressions
   * match this event filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentEventFilter segment_event_filter = 5;</code>
   * @return Whether the segmentEventFilter field is set.
   */
  boolean hasSegmentEventFilter();
  /**
   * <pre>
   * Creates a filter that matches events of a single event name. If a
   * parameter filter expression is specified, only the subset of events that
   * match both the single event name and the parameter filter expressions
   * match this event filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentEventFilter segment_event_filter = 5;</code>
   * @return The segmentEventFilter.
   */
  com.google.analytics.data.v1alpha.SegmentEventFilter getSegmentEventFilter();
  /**
   * <pre>
   * Creates a filter that matches events of a single event name. If a
   * parameter filter expression is specified, only the subset of events that
   * match both the single event name and the parameter filter expressions
   * match this event filter.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentEventFilter segment_event_filter = 5;</code>
   */
  com.google.analytics.data.v1alpha.SegmentEventFilterOrBuilder getSegmentEventFilterOrBuilder();

  public com.google.analytics.data.v1alpha.SegmentFilterExpression.ExprCase getExprCase();
}
