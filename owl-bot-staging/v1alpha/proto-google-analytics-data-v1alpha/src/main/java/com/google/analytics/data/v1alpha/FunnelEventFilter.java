// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/data.proto

package com.google.analytics.data.v1alpha;

/**
 * <pre>
 * Creates a filter that matches events of a single event name. If a parameter
 * filter expression is specified, only the subset of events that match both the
 * single event name and the parameter filter expressions match this event
 * filter.
 * </pre>
 *
 * Protobuf type {@code google.analytics.data.v1alpha.FunnelEventFilter}
 */
public final class FunnelEventFilter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.analytics.data.v1alpha.FunnelEventFilter)
    FunnelEventFilterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FunnelEventFilter.newBuilder() to construct.
  private FunnelEventFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FunnelEventFilter() {
    eventName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FunnelEventFilter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FunnelEventFilter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000001;
            eventName_ = s;
            break;
          }
          case 18: {
            com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = funnelParameterFilterExpression_.toBuilder();
            }
            funnelParameterFilterExpression_ = input.readMessage(com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(funnelParameterFilterExpression_);
              funnelParameterFilterExpression_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelEventFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelEventFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.data.v1alpha.FunnelEventFilter.class, com.google.analytics.data.v1alpha.FunnelEventFilter.Builder.class);
  }

  private int bitField0_;
  public static final int EVENT_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object eventName_;
  /**
   * <pre>
   * This filter matches events of this single event name. Event name is
   * required.
   * </pre>
   *
   * <code>optional string event_name = 1;</code>
   * @return Whether the eventName field is set.
   */
  @java.lang.Override
  public boolean hasEventName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * This filter matches events of this single event name. Event name is
   * required.
   * </pre>
   *
   * <code>optional string event_name = 1;</code>
   * @return The eventName.
   */
  @java.lang.Override
  public java.lang.String getEventName() {
    java.lang.Object ref = eventName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      eventName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This filter matches events of this single event name. Event name is
   * required.
   * </pre>
   *
   * <code>optional string event_name = 1;</code>
   * @return The bytes for eventName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEventNameBytes() {
    java.lang.Object ref = eventName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      eventName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FUNNEL_PARAMETER_FILTER_EXPRESSION_FIELD_NUMBER = 2;
  private com.google.analytics.data.v1alpha.FunnelParameterFilterExpression funnelParameterFilterExpression_;
  /**
   * <pre>
   * If specified, this filter matches events that match both the single event
   * name and the parameter filter expressions.
   * Inside the parameter filter expression, only parameter filters are
   * available.
   * </pre>
   *
   * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
   * @return Whether the funnelParameterFilterExpression field is set.
   */
  @java.lang.Override
  public boolean hasFunnelParameterFilterExpression() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If specified, this filter matches events that match both the single event
   * name and the parameter filter expressions.
   * Inside the parameter filter expression, only parameter filters are
   * available.
   * </pre>
   *
   * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
   * @return The funnelParameterFilterExpression.
   */
  @java.lang.Override
  public com.google.analytics.data.v1alpha.FunnelParameterFilterExpression getFunnelParameterFilterExpression() {
    return funnelParameterFilterExpression_ == null ? com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.getDefaultInstance() : funnelParameterFilterExpression_;
  }
  /**
   * <pre>
   * If specified, this filter matches events that match both the single event
   * name and the parameter filter expressions.
   * Inside the parameter filter expression, only parameter filters are
   * available.
   * </pre>
   *
   * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
   */
  @java.lang.Override
  public com.google.analytics.data.v1alpha.FunnelParameterFilterExpressionOrBuilder getFunnelParameterFilterExpressionOrBuilder() {
    return funnelParameterFilterExpression_ == null ? com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.getDefaultInstance() : funnelParameterFilterExpression_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, eventName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getFunnelParameterFilterExpression());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, eventName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFunnelParameterFilterExpression());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.analytics.data.v1alpha.FunnelEventFilter)) {
      return super.equals(obj);
    }
    com.google.analytics.data.v1alpha.FunnelEventFilter other = (com.google.analytics.data.v1alpha.FunnelEventFilter) obj;

    if (hasEventName() != other.hasEventName()) return false;
    if (hasEventName()) {
      if (!getEventName()
          .equals(other.getEventName())) return false;
    }
    if (hasFunnelParameterFilterExpression() != other.hasFunnelParameterFilterExpression()) return false;
    if (hasFunnelParameterFilterExpression()) {
      if (!getFunnelParameterFilterExpression()
          .equals(other.getFunnelParameterFilterExpression())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEventName()) {
      hash = (37 * hash) + EVENT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getEventName().hashCode();
    }
    if (hasFunnelParameterFilterExpression()) {
      hash = (37 * hash) + FUNNEL_PARAMETER_FILTER_EXPRESSION_FIELD_NUMBER;
      hash = (53 * hash) + getFunnelParameterFilterExpression().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.data.v1alpha.FunnelEventFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.analytics.data.v1alpha.FunnelEventFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Creates a filter that matches events of a single event name. If a parameter
   * filter expression is specified, only the subset of events that match both the
   * single event name and the parameter filter expressions match this event
   * filter.
   * </pre>
   *
   * Protobuf type {@code google.analytics.data.v1alpha.FunnelEventFilter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.analytics.data.v1alpha.FunnelEventFilter)
      com.google.analytics.data.v1alpha.FunnelEventFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelEventFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelEventFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.data.v1alpha.FunnelEventFilter.class, com.google.analytics.data.v1alpha.FunnelEventFilter.Builder.class);
    }

    // Construct using com.google.analytics.data.v1alpha.FunnelEventFilter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFunnelParameterFilterExpressionFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      eventName_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (funnelParameterFilterExpressionBuilder_ == null) {
        funnelParameterFilterExpression_ = null;
      } else {
        funnelParameterFilterExpressionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.analytics.data.v1alpha.ReportingApiProto.internal_static_google_analytics_data_v1alpha_FunnelEventFilter_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelEventFilter getDefaultInstanceForType() {
      return com.google.analytics.data.v1alpha.FunnelEventFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelEventFilter build() {
      com.google.analytics.data.v1alpha.FunnelEventFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.data.v1alpha.FunnelEventFilter buildPartial() {
      com.google.analytics.data.v1alpha.FunnelEventFilter result = new com.google.analytics.data.v1alpha.FunnelEventFilter(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.eventName_ = eventName_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        if (funnelParameterFilterExpressionBuilder_ == null) {
          result.funnelParameterFilterExpression_ = funnelParameterFilterExpression_;
        } else {
          result.funnelParameterFilterExpression_ = funnelParameterFilterExpressionBuilder_.build();
        }
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.data.v1alpha.FunnelEventFilter) {
        return mergeFrom((com.google.analytics.data.v1alpha.FunnelEventFilter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.data.v1alpha.FunnelEventFilter other) {
      if (other == com.google.analytics.data.v1alpha.FunnelEventFilter.getDefaultInstance()) return this;
      if (other.hasEventName()) {
        bitField0_ |= 0x00000001;
        eventName_ = other.eventName_;
        onChanged();
      }
      if (other.hasFunnelParameterFilterExpression()) {
        mergeFunnelParameterFilterExpression(other.getFunnelParameterFilterExpression());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.analytics.data.v1alpha.FunnelEventFilter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.analytics.data.v1alpha.FunnelEventFilter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object eventName_ = "";
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @return Whether the eventName field is set.
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @return The eventName.
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eventName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @return The bytes for eventName.
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @param value The eventName to set.
     * @return This builder for chaining.
     */
    public Builder setEventName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      eventName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      eventName_ = getDefaultInstance().getEventName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This filter matches events of this single event name. Event name is
     * required.
     * </pre>
     *
     * <code>optional string event_name = 1;</code>
     * @param value The bytes for eventName to set.
     * @return This builder for chaining.
     */
    public Builder setEventNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      eventName_ = value;
      onChanged();
      return this;
    }

    private com.google.analytics.data.v1alpha.FunnelParameterFilterExpression funnelParameterFilterExpression_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.analytics.data.v1alpha.FunnelParameterFilterExpression, com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder, com.google.analytics.data.v1alpha.FunnelParameterFilterExpressionOrBuilder> funnelParameterFilterExpressionBuilder_;
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     * @return Whether the funnelParameterFilterExpression field is set.
     */
    public boolean hasFunnelParameterFilterExpression() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     * @return The funnelParameterFilterExpression.
     */
    public com.google.analytics.data.v1alpha.FunnelParameterFilterExpression getFunnelParameterFilterExpression() {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        return funnelParameterFilterExpression_ == null ? com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.getDefaultInstance() : funnelParameterFilterExpression_;
      } else {
        return funnelParameterFilterExpressionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public Builder setFunnelParameterFilterExpression(com.google.analytics.data.v1alpha.FunnelParameterFilterExpression value) {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        funnelParameterFilterExpression_ = value;
        onChanged();
      } else {
        funnelParameterFilterExpressionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public Builder setFunnelParameterFilterExpression(
        com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder builderForValue) {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        funnelParameterFilterExpression_ = builderForValue.build();
        onChanged();
      } else {
        funnelParameterFilterExpressionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public Builder mergeFunnelParameterFilterExpression(com.google.analytics.data.v1alpha.FunnelParameterFilterExpression value) {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
            funnelParameterFilterExpression_ != null &&
            funnelParameterFilterExpression_ != com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.getDefaultInstance()) {
          funnelParameterFilterExpression_ =
            com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.newBuilder(funnelParameterFilterExpression_).mergeFrom(value).buildPartial();
        } else {
          funnelParameterFilterExpression_ = value;
        }
        onChanged();
      } else {
        funnelParameterFilterExpressionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public Builder clearFunnelParameterFilterExpression() {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        funnelParameterFilterExpression_ = null;
        onChanged();
      } else {
        funnelParameterFilterExpressionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder getFunnelParameterFilterExpressionBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getFunnelParameterFilterExpressionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    public com.google.analytics.data.v1alpha.FunnelParameterFilterExpressionOrBuilder getFunnelParameterFilterExpressionOrBuilder() {
      if (funnelParameterFilterExpressionBuilder_ != null) {
        return funnelParameterFilterExpressionBuilder_.getMessageOrBuilder();
      } else {
        return funnelParameterFilterExpression_ == null ?
            com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.getDefaultInstance() : funnelParameterFilterExpression_;
      }
    }
    /**
     * <pre>
     * If specified, this filter matches events that match both the single event
     * name and the parameter filter expressions.
     * Inside the parameter filter expression, only parameter filters are
     * available.
     * </pre>
     *
     * <code>optional .google.analytics.data.v1alpha.FunnelParameterFilterExpression funnel_parameter_filter_expression = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.analytics.data.v1alpha.FunnelParameterFilterExpression, com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder, com.google.analytics.data.v1alpha.FunnelParameterFilterExpressionOrBuilder> 
        getFunnelParameterFilterExpressionFieldBuilder() {
      if (funnelParameterFilterExpressionBuilder_ == null) {
        funnelParameterFilterExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.data.v1alpha.FunnelParameterFilterExpression, com.google.analytics.data.v1alpha.FunnelParameterFilterExpression.Builder, com.google.analytics.data.v1alpha.FunnelParameterFilterExpressionOrBuilder>(
                getFunnelParameterFilterExpression(),
                getParentForChildren(),
                isClean());
        funnelParameterFilterExpression_ = null;
      }
      return funnelParameterFilterExpressionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.analytics.data.v1alpha.FunnelEventFilter)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.data.v1alpha.FunnelEventFilter)
  private static final com.google.analytics.data.v1alpha.FunnelEventFilter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.analytics.data.v1alpha.FunnelEventFilter();
  }

  public static com.google.analytics.data.v1alpha.FunnelEventFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FunnelEventFilter>
      PARSER = new com.google.protobuf.AbstractParser<FunnelEventFilter>() {
    @java.lang.Override
    public FunnelEventFilter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FunnelEventFilter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FunnelEventFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FunnelEventFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.data.v1alpha.FunnelEventFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

