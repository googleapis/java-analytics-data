// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1alpha/data.proto

package com.google.analytics.data.v1alpha;

public interface UserSegmentConditionGroupOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.analytics.data.v1alpha.UserSegmentConditionGroup)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Data is included or excluded from the segment based on if it matches
   * the condition group. This scoping defines how many events the
   * `segmentFilterExpression` is evaluated on before the condition group
   * is determined to be matched or not. For example if `conditionScoping =
   * USER_CRITERIA_WITHIN_SAME_SESSION`, the expression is evaluated on all
   * events in a session, and then, the condition group is determined to be
   * matched or not for this user. For example if `conditionScoping =
   * USER_CRITERIA_WITHIN_SAME_EVENT`, the expression is evaluated on a single
   * event, and then, the condition group is determined to be matched or not for
   * this user.
   * Optional. If unspecified, `conditionScoping = ACROSS_ALL_SESSIONS` is
   * used.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.UserCriteriaScoping condition_scoping = 1;</code>
   * @return The enum numeric value on the wire for conditionScoping.
   */
  int getConditionScopingValue();
  /**
   * <pre>
   * Data is included or excluded from the segment based on if it matches
   * the condition group. This scoping defines how many events the
   * `segmentFilterExpression` is evaluated on before the condition group
   * is determined to be matched or not. For example if `conditionScoping =
   * USER_CRITERIA_WITHIN_SAME_SESSION`, the expression is evaluated on all
   * events in a session, and then, the condition group is determined to be
   * matched or not for this user. For example if `conditionScoping =
   * USER_CRITERIA_WITHIN_SAME_EVENT`, the expression is evaluated on a single
   * event, and then, the condition group is determined to be matched or not for
   * this user.
   * Optional. If unspecified, `conditionScoping = ACROSS_ALL_SESSIONS` is
   * used.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.UserCriteriaScoping condition_scoping = 1;</code>
   * @return The conditionScoping.
   */
  com.google.analytics.data.v1alpha.UserCriteriaScoping getConditionScoping();

  /**
   * <pre>
   * Data is included or excluded from the segment based on if it matches
   * this expression. Expressions express criteria on dimension, metrics,
   * and/or parameters.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression segment_filter_expression = 2;</code>
   * @return Whether the segmentFilterExpression field is set.
   */
  boolean hasSegmentFilterExpression();
  /**
   * <pre>
   * Data is included or excluded from the segment based on if it matches
   * this expression. Expressions express criteria on dimension, metrics,
   * and/or parameters.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression segment_filter_expression = 2;</code>
   * @return The segmentFilterExpression.
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpression getSegmentFilterExpression();
  /**
   * <pre>
   * Data is included or excluded from the segment based on if it matches
   * this expression. Expressions express criteria on dimension, metrics,
   * and/or parameters.
   * </pre>
   *
   * <code>.google.analytics.data.v1alpha.SegmentFilterExpression segment_filter_expression = 2;</code>
   */
  com.google.analytics.data.v1alpha.SegmentFilterExpressionOrBuilder getSegmentFilterExpressionOrBuilder();
}
